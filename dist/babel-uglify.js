!function(t){var o={};function r(e){if(o[e])return o[e].exports;var n=o[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=o,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"e",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.e)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)r.d(t,o,function(e){return n[e]}.bind(null,o));return t},r.n=function(e){var n=e&&e.e?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,t){"use strict";function o(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function r(e,n,t){return n&&o(e.prototype,n),t&&o(e,t),e}t.r(n);var i=function(){function n(e){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),u.set(this,{writable:!0,value:void 0}),function(e,n,t){if(!n.has(e))throw new TypeError("attempted to set private field on non-instance");var o=n.get(e);if(!o.writable)throw new TypeError("attempted to set read only private field");o.value=t}(this,u,"No message specified"),this.defaultMsg=e}return r(n,[{key:"_privateMethod",value:function(e){return e||this.defaultMsg||function(e,n){if(!n.has(e))throw new TypeError("attempted to get private field on non-instance");return n.get(e).value}(this,u)}}]),r(n,[{key:"publicMethod",value:function(e){return this.u(e)}}]),n}(),u=new WeakMap;console.log("new TestClass()\n  .publicMethod():"),console.log("    ".concat((new i).publicMethod())),console.log(),console.log('new TestClass("Default message")\n  .publicMethod():'),console.log("    ".concat(new i("Default message").publicMethod())),console.log(),console.log('new TestClass("Default message")\n  .publicMethod("Parameter message"):'),console.log("    ".concat(new i("Default message").publicMethod("Parameter message"))),console.log()}]);