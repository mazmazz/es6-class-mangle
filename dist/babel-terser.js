!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"e",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.e)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.e?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";function o(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function r(e,n,t){return n&&o(e.prototype,n),t&&o(e,t),e}t.r(n);var i=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),u.set(this,{writable:!0,value:void 0}),function(e,n,t){if(!n.has(e))throw new TypeError("attempted to set private field on non-instance");var o=n.get(e);if(!o.writable)throw new TypeError("attempted to set read only private field");o.value=t}(this,u,"No message specified"),this.defaultMsg=n}return r(e,[{key:"_privateMethod",value:function(e){return e||this.defaultMsg||function(e,n){if(!n.has(e))throw new TypeError("attempted to get private field on non-instance");return n.get(e).value}(this,u)}}]),r(e,[{key:"publicMethod",value:function(e){return this.u(e)}}]),e}(),u=new WeakMap;console.log("new TestClass()\n  .publicMethod():"),console.log("    ".concat((new i).publicMethod())),console.log(),console.log('new TestClass("Default message")\n  .publicMethod():'),console.log("    ".concat(new i("Default message").publicMethod())),console.log(),console.log('new TestClass("Default message")\n  .publicMethod("Parameter message"):'),console.log("    ".concat(new i("Default message").publicMethod("Parameter message"))),console.log()}]);